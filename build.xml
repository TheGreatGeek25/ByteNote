<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="default" name="ByteNote" xmlns:fx="javafx:com.sun.javafx.tools.ant">
	<property environment="env"/>
	<property name="debuglevel" value="source,lines,vars"/>
	<property name="target" value="1.8"/>
	<property name="source" value="1.8"/>
	<property name="build.src" value="${basedir}/src"/>
	<property name="build.version" value="2.1.0"/>
	<property name="build.dir" value="${basedir}/build"/>
	<property name="build.bin" value="${basedir}/bin"/>
	<property name="build.src.releaseNotes" value="${build.src}/bytenote/releaseNotes.html"/>
	<property name="build.jar.dir" value="${build.dir}/jar"/>
	<property name="build.jar.name" value="${ant.project.name}_v${build.version}.jar"/>
	<property name="build.jarUpdateModule.dir" value="ByteNoteJARUpdateModule/"/>
	<property name="build.jarUpdateModule.jar" value="${build.jarUpdateModule.dir}/build/jar/ByteNoteJARUpdateModule.jar"/>
	<property name="build.updateSite.url" value="https://thegreatgeek25.github.io/ByteNote/update"/>
	<property name="build.updateSite.dir" value="${build.dir}/updateSite"/>
	<property name="build.data.dir" value="${basedir}/buildData"/>
	<property name="build.win32bit.dir" value="${build.dir}/Windows/32bit"/>
	<property name="build.win32bit.exeInstaller.dir" value="${build.win32bit.dir}/exeInstaller"/>
	<property name="build.win32bit.exeInstaller.name" value="${ant.project.name}_v${build.version}-windows-32bit"/>
	<property name="build.win32bit.exeUpdate.dir" value="${build.win32bit.dir}/exeUpdate"/>
	<property name="build.win32bit.exeUpdate.name" value="${ant.project.name}_v${build.version}-windows-32bit-update"/>
	<property name="build.win32bit.exeInstaller.script.file" value="${build.data.dir}/Windows/scripts/ByteNote-win32bit.iss"/>
	<property name="build.win32bit.exeUpdate.script.file" value="${build.data.dir}/Windows/scripts/ByteNote-win32bit-update.iss"/>
	<property name="build.logos.dir" value="${build.data.dir}/logos"/>
	
	<property name="build.isVersionComplete" value="true"/>
	
	<condition property="isVersionComplete">
		<equals arg1="${build.isVersionComplete}" arg2="false" />
	</condition>
		
	<target name="echoIsVersionComplete" if="isVersionComplete">
		<echo level="warning">This version of ${ant.project.name} is not complete!</echo>
	</target>
		
	<target name="init-fx-tasks">
		<path id="fxant">
			<filelist>
				<file name="${java.home}\..\lib\ant-javafx.jar"/>
				<file name="${java.home}\lib\jfxrt.jar"/>
			</filelist>
		</path>
		
		<taskdef resource="com/sun/javafx/tools/ant/antlib.xml"
			uri="javafx:com.sun.javafx.tools.ant"
			classpathref="fxant"/>
	</target>

	<path id="ByteNote.classpath">
		<pathelement location="${build.bin}/"/>
	</path>
	
	<target name="buildJARUpdateModule">
		<ant antfile="${build.jarUpdateModule.dir}/build.xml" >
			<property name="build.jarUpdate.jar.file" value="${build.jarUpdateModule.jar}"/>
			<property name="jarUpdateBasedir" value="${basedir}/ByteNoteJARUpdateModule"/>
		</ant>
	</target>
	
	<target depends="buildUpdateSite,buildWin32bitEXEInstaller" name="buildWin">
		
	</target>
	
	<target depends="buildWin32bitUpdateEXE" name="buildUpdateSite">
		<mkdir dir="${build.updateSite.dir}"/>
		<echo file="${build.updateSite.dir}/requiredJREVersion" message="${java.specification.version}"/>
		<echo file="${build.updateSite.dir}/versionName" message="v${build.version}"/>
		<copy verbose="true" file="${build.src.releaseNotes}"  tofile="${build.updateSite.dir}/releaseNotes.html"/>
		<copy file="${build.logos.dir}/logo256.png" tofile="${build.updateSite.dir}/logo.png"/>
		<copy file="${build.jar.dir}/${build.jar.name}" tofile="${build.updateSite.dir}/updateJar.jar"/>
		<copy file="${build.win32bit.exeUpdate.dir}/${build.win32bit.exeUpdate.name}.exe" tofile="${build.updateSite.dir}/windows32bit.exe"/>
	</target>
	
	<target depends="buildJar,init-fx-tasks" name="buildWin32bitBundle">
		<fx:deploy verbose="true" nativeBundles="image" outdir="${build.win32bit.dir}/bundle" outfile="ByteNote"> 
			<fx:application mainClass="bytenote.ByteNoteMain" name="ByteNote" version="v${build.version}"/>
			<fx:info title="ByteNote">
				<fx:icon href="${build.data.dir}/logos/logoAll.ico" />
			</fx:info>
			<fx:resources>
				<fx:fileset type="jar" dir="${build.jar.dir}" >
					<include name="${build.jar.name}"/>
				</fx:fileset>
			</fx:resources>
		</fx:deploy>
		<copy file="${basedir}/LICENSE" tofile="${build.win32bit.dir}/bundle/bundles/ByteNote/LICENSE.txt"/>
	 	<echo message="win32bit" file="${build.win32bit.dir}/bundle/bundles/ByteNote/app/installationInfo"/>
	</target>
	
	<target depends="buildWin32bitBundle" name="buildWin32bitUpdateEXE">
		<echo file="${build.dir}/Windows/32bit/temp/setupUpdate.iss">#define bundleDir &quot;${build.win32bit.dir}/bundle/bundles/ByteNote&quot;
#define outputDir &quot;${build.win32bit.exeUpdate.dir}&quot;
#define appName &quot;ByteNote&quot;
#define appVersion &quot;${build.version}&quot;
#define appExeName &quot;ByteNote.exe&quot;
#define outputName &quot;${build.win32bit.exeUpdate.name}&quot;
</echo>
		<loadfile property="script" srcfile="${build.win32bit.exeUpdate.script.file}" />
		<echo file="${build.dir}/Windows/32bit/temp/setupUpdate.iss" append="true" message="${script}"/>
		<exec failonerror="true" executable="${env.INNOSETUP_HOME}/iscc" >
					<arg value="&quot;${build.dir}/Windows/32bit/temp/setupUpdate.iss&quot;" />
				</exec>
		<delete dir="${build.dir}/Windows/32bit/temp"/>
	</target>
	
	<target depends="buildWin32bitBundle" name="buildWin32bitEXEInstaller">
		<echo file="${build.dir}/Windows/32bit/temp/setup.iss">#define bundleDir &quot;${build.win32bit.dir}/bundle/bundles/ByteNote&quot;
#define outputDir &quot;${build.win32bit.exeInstaller.dir}&quot;
#define appName &quot;ByteNote&quot;
#define appVersion &quot;${build.version}&quot;
#define appExeName &quot;ByteNote.exe&quot;
#define outputName &quot;${build.win32bit.exeInstaller.name}&quot;
</echo>
		<loadfile property="script" srcfile="${build.win32bit.exeInstaller.script.file}" />
		<echo file="${build.dir}/Windows/32bit/temp/setup.iss" append="true" message="${script}"/>
		<exec failonerror="true" executable="${env.INNOSETUP_HOME}/iscc" >
			<arg value="&quot;${build.dir}/Windows/32bit/temp/setup.iss&quot;" />
		</exec>
		<delete dir="${build.dir}/Windows/32bit/temp"/>
	</target>
	
	<target depends="default" name="runJar">
		<java jar="${build.jar.dir}/${build.jar.name}" fork="true" />
	</target>
	
	<target depends="default" name="debugJar">
		<java jar="${build.jar.dir}/${build.jar.name}" fork="true" >
			<jvmarg value="-Xdebug"/>
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5432"/>
		</java>
	</target>
	
	<target depends="buildJar" name="default">
		
	</target>
	
	<target depends="initBin,compile,buildJARUpdateModule" name="buildJar">
		<jar destfile="${build.jar.dir}/${build.jar.name}" filesetmanifest="mergewithoutmain">
			<manifest>
		    	<attribute name="Main-Class" value="bytenote.ByteNoteMain"/>
		    	<attribute name="Class-Path" value="."/>
			</manifest>
		    <fileset dir="${build.bin}"/>
			<fileset file="${build.jarUpdateModule.jar}"/>
			<fileset file="${basedir}/LICENSE" />
		</jar>
	</target>
	
	<target depends="echoIsVersionComplete,clean" name="initBin">
		<mkdir dir="${build.bin}"/>
		<copy includeemptydirs="false" todir="${build.bin}">
			<fileset dir="${build.src}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile">
		<javac debug="true" debuglevel="${debuglevel}" destdir="${build.bin}" includeantruntime="false" source="${source}" target="${target}">
			<src path="${build.src}"/>
		    <classpath refid="ByteNote.classpath"/>
		</javac>
	</target>
	
	<target name="clean">
		<delete dir="${build.bin}"/>
		<delete dir="${build.dir}"/>
		<ant antfile="${build.jarUpdateModule.dir}/build.xml" target="clean">
			<property name="jarUpdateBasedir" value="${basedir}/ByteNoteJARUpdateModule"/>
		</ant>
	</target>

</project>